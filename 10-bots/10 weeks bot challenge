10 weeks bot challenge


Признаюсь вам, что я не нашел полностью с нуля. большинство задач я делал и раньше, просто теперь они объединились
 в четкое понимание того, что нужно делать.


 Я даже не стал со временем поднимать новую ветку или отдельный репозиторий в гитхаб.
 Зачем на это тратить время?
 раз я делаю бота, можно и его код хранить в основном репозитории.
 Сделано это для экономии времени.
 Тоесть быть максимально ленивым -- это про этот проект.

 До данных в реадме - я просто хотел сразу описать побольше вначале. а потом использовать тот же текст, для статьи в медиуме(которую вы сейчас и читаете)

 Сходу я написал название для 10 проектов, что это более 2х месяцев работы.

 При это я знал, что такой подход со временем упростит мою задачу.
 я быстренько начал писать общее описание для каждого проекта.
 описание занимало не более 1й а4 страницы. Это было легко делать, т.к. я прокручивал эти проекты в своей голове уже около года и понимал начальные входные данные которые мне понадобятся

 также благодаря тому. что я раньше детально описал функционал клона багбота(вы можете почитать об этом здесь) - просто и быстро было сделать первые наброски и для других 10-ти проектов.

 тоесть по сути я просто разклонировал описание багбота на еще 10 проектов, и пытаясь делать одновременно все эти проекты, я старался автоматизировать процесс разработки каждого отдельного проекта.


 таким образом я также старался себя подстегнуть продолжать проект клона багбота.

 Список этих описаний можете найти здесь: {10 проджей описалово}

 также я начал группировать общий функционал.

 Благодаря нескольким проектам я унифицирую свою работу, но и помогу основному проекту - поидее я повторяюсь.


 За создание диалога я выделил файл tasklist.js в нем у меня получилось только то, что мне нужно.

 Я на бумаге создал примеры массивов и понял как их оптимизировать.

 Решил использовать потом Class or Model.

 В дальнейшем я и необходимыен функции для багбота.

 Вначале документа я буду создавать объект, который буду хранить в базе.

 потом объект dialog flow

 Список примерных команд на все проекты
 Список dialog flows(will can be update in process)

 Создали все скиллы в файлах с общим методами и доступными данными.

 В процессе я начал генерировать уникальные фичи по разным проектам.

 В процессе я пойму, какая наиболее удобная структура будет у меня хранить данные.

 Сделали общую функцию по выводу данных
 Она принимает название и название темплейта


 Придумал пошаговый план по реализации.

 Добавлю скриншот, как работает вывод у каждого бота.

 Составил список основных требований и функций.

 Проект НАХУЙ будет находится в состоянии бота, до того момента как я перестану менять структуру и перестану хотеть добавлять фучи новые.

 Потом он перенесется в API, и и потому бот просто будет слать запросы.


 Желательно все проекты перенести в API тоже за 1 раз, тогда повторов не будет а все одинаковые может быть подмодулями.


 Хотелось бы сделать так, чтобы базовый функционал работал и переделывать бы не хотелось.

i: Получить какое бы нибудь ревью от создателей Botkit, чтобы c их знаниями и примерами улучшить работу или код.

 Часть функционала ботов перекликаются с модулями, которые есть в моем большом проекте.
 Это отдельные куски функционала.


 Потом чтобы продолжить я сделал список фич, вынес их в отдельный файл.
 В этот же файл я добавил фичи багбота тоже.

 потом принялся разбивать существующие уже задачи на майлстоуны - и группировать задачи вместе

 список общих задач вы можете увидеть по этой ссылке: [линк]


 Выбрал одну функцию которую надо было описать(любую) и начал ее пошагово описывать. разбирать на состовные части.

 Начал расписывать работу основных функций как add/delete/ViewIssueData
 В ходе описания функций появлялись как положительные моменты(функции делятся просто) так и негативные(нужно было потратить больше время)

 Стал разрабатывать функционал на необходимый(без чего ничего работать работать не будет)


 Общий(функционал добавляется в М1 или М2)
 расширенный(функции выносятся в М3, чтобы не отвлекать раньше времени ) - потому что они нужны, но их можно сделать и позже


 Начал вырисовываться спектр задач на первые 2 версии проекта

 Функционал начинает усложнятся и проект превращаться в подобие реального, серьезного проекта.

 добавляется описание проверок, работа с security, data validations, etc.


 След шагом было первое изменение в предыдущую структуру, т.к. некоторые боты имели уникальный формат и выходили за рамки.

 Из-за этого 1го кейса приходилось усложнить код, писать доп.проверки

 Я решил Screw it! И изменил струткуру в паре ботов.

 также я понял что идея итератора объектов мне не нравится и лучше сейчас усложнить главвный масив - сделать кучу подмассивов и тупую и слоэну. структуру
 но так будет удобнее работать со всеми проектами одновременнно.


 Следующей идеей стало создать первый базовый dialog flow, т.к. тут отже было много чего непонятного.

 Т.е. нужно было перейти от т.А(описание и стандартные команды) к т.В, когда реально можно вводя данные потом получить рабочую логику - это сложно.
